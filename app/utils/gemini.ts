const GEMINI_API_KEY = process.env.GEMINI_API_KEY;

if (!GEMINI_API_KEY) {
  throw new Error('GEMINI_API_KEY environment variable is not set');
}

export async function generateStructuredNotes(vttContent: string, lectureTitle: string): Promise<string> {
  try {
    const prompt = `
Rewrite the following lecture caption as a well-structured blog note section using Markdown format. Follow these guidelines:

- Remove all timestamps and speaker annotations.
- Keep all original information intact‚Äîdo not skip or omit any important details.
- Rephrase content to improve clarity, flow, and readability.
- Use a \`##\` heading that exactly matches the lecture title.
- Break long paragraphs into shorter ones for easier review.
- Use bullet points and numbered lists where appropriate.
- Add relevant emojis to highlight key ideas or steps.
- Automatically detect and style the following keywords consistently with bold and emojis:
  - üí° **Tip:**
  - ‚ö†Ô∏è **Warning:**
  - üìå **Example:**
  - üìù **Note:**
  - ‚å®Ô∏è **Shortcut:**
- Include short, simple code snippets in fenced blocks, if applicable.
- Ensure proper Markdown formatting with real line breaks instead of escaped characters like \`\n\`.
- The final output must be a clean, well-formatted Markdown document ready to be written as a \`.md\` file.

Here is the lecture transcript:

${vttContent}
`;
    const response = await fetch(
      `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${GEMINI_API_KEY}`,
      {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          contents: [{
            parts: [{
              text: prompt
            }]
          }],
          generationConfig: {
            temperature: 0.3,
            topK: 40,
            topP: 0.8,
            maxOutputTokens: 2048,
          },
          safetySettings: [
            {
              category: "HARM_CATEGORY_HARASSMENT",
              threshold: "BLOCK_MEDIUM_AND_ABOVE"
            },
            {
              category: "HARM_CATEGORY_HATE_SPEECH",
              threshold: "BLOCK_MEDIUM_AND_ABOVE"
            },
            {
              category: "HARM_CATEGORY_SEXUALLY_EXPLICIT",
              threshold: "BLOCK_MEDIUM_AND_ABOVE"
            },
            {
              category: "HARM_CATEGORY_DANGEROUS_CONTENT",
              threshold: "BLOCK_MEDIUM_AND_ABOVE"
            }
          ]
        })
      }
    );

    if (!response.ok) {
      throw new Error(`Gemini API error: ${response.statusText}`);
    }

    const data = await response.json();

    if (!data.candidates?.[0]?.content?.parts?.[0]?.text) {
      throw new Error('No content generated by Gemini API');
    }

    return data.candidates[0].content.parts[0].text;
  } catch (error) {
    console.error('Error generating structured notes:', error);
    // Return the original content as fallback
    return `# ${lectureTitle}\n\n${vttContent}`;
  }
} 